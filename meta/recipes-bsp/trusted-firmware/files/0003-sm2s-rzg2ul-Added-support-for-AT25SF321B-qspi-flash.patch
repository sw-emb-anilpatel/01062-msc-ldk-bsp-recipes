From e40d500cff268e150ac5201c033f687dc709dd86 Mon Sep 17 00:00:00 2001
From: Anil Patel <anil.patel@softwebsolutions.com>
Date: Wed, 15 Nov 2023 21:54:35 +0530
Subject: [PATCH 3/5] sm2s-rzg2ul: Added support for AT25SF321B qspi flash

Signed-off-by: Anil Patel <anil.patel@softwebsolutions.com>
---
 .../spi_multi/AT25SF321B/spi_multi_device.c   |  54 ++++++++
 .../AT25SF321B/spi_multi_reg_values.h         | 119 ++++++++++++++++++
 2 files changed, 173 insertions(+)
 create mode 100644 plat/renesas/rz/common/drivers/spi_multi/AT25SF321B/spi_multi_device.c
 create mode 100644 plat/renesas/rz/common/include/drivers/spi_multi/AT25SF321B/spi_multi_reg_values.h

diff --git a/plat/renesas/rz/common/drivers/spi_multi/AT25SF321B/spi_multi_device.c b/plat/renesas/rz/common/drivers/spi_multi/AT25SF321B/spi_multi_device.c
new file mode 100644
index 000000000..63989ec2d
--- /dev/null
+++ b/plat/renesas/rz/common/drivers/spi_multi/AT25SF321B/spi_multi_device.c
@@ -0,0 +1,54 @@
+/*
+ * Copyright (c) 2020, Renesas Electronics Corporation. All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+#include <stdint.h>
+#include <lib/utils_def.h>
+#include <lib/mmio.h>
+#include <arch_helpers.h>
+#include <spi_multi_regs.h>
+#include <spi_multi.h>
+#include <spi_multi_reg_values.h>
+
+#include <drivers/delay_timer.h>
+
+void spi_multi_setup_device( void )
+{
+
+	uint32_t val;
+	uint8_t  read_status;
+
+	mmio_write_32(SPIM_PHYOFFSET1, SPIM_PHYOFFSET1_SET_VALUE);
+	mmio_write_32(SPIM_PHYOFFSET2, SPIM_PHYOFFSET2_SET_VALUE);
+	spi_multi_timing_set();
+
+	/*  Set Data read option */
+	/* Required when command 0xEB is specified.
+	 * Not required when a command other than is specified,
+	 * but there is no problem in operation.
+	 */
+	val = SPIM_DROPR_SET_VALUE;
+	mmio_write_32(SPIM_DROPR, val);
+
+	read_status = spi_multi_cmd_read(SMCMR_CMD_READ_STATUS_REGISTER_2);
+	if ((read_status & STATUS_2_QE) == STATUS_2_QE) {
+		return;
+	}
+	/* Write Enable Command */
+	spi_multi_cmd_write(SMCMR_CMD_WRITE_ENABLE,SPI_MANUAL_COMMAND_SIZE_0,0);
+	/* Write Status Register-2 Command Quad Enable */
+	val = ((STATUS_2_QE | read_status) << SMWDR0_1BYTE_DATA_BIT_SHIFT);
+	spi_multi_cmd_write(SMCMR_CMD_WRITE_STATUS_REGISTER_2,SPI_MANUAL_COMMAND_SIZE_8_BIT,val);
+	/* status 1 BUSY check */
+	while(1) {
+		read_status = spi_multi_cmd_read(SMCMR_CMD_READ_STATUS_REGISTER_1);
+		if (( read_status & STATUS_1_BUSY_BIT) == STATUS_1_BUSY) {
+			udelay(STATUS_BUSY_READ_DELAY_TIME);
+			continue;
+		} else {
+			break;
+		}
+	}
+	return;
+}
diff --git a/plat/renesas/rz/common/include/drivers/spi_multi/AT25SF321B/spi_multi_reg_values.h b/plat/renesas/rz/common/include/drivers/spi_multi/AT25SF321B/spi_multi_reg_values.h
new file mode 100644
index 000000000..b25bfda65
--- /dev/null
+++ b/plat/renesas/rz/common/include/drivers/spi_multi/AT25SF321B/spi_multi_reg_values.h
@@ -0,0 +1,119 @@
+/*
+ * Copyright (c) 2021, Renesas Electronics Corporation. All rights reserved.
+ *
+ * SPDX-License-Identifier: BSD-3-Clause
+ */
+/* Dialog AT25QL128A */
+#ifndef _SPI_MULTI_REG_VALUES_H_
+#define _SPI_MULTI_REG_VALUES_H_
+/*
+ * Selectable definitions
+ */
+/* In the case of addr width 24bit */
+#define SET_DRENR_ADE_VALUE  DRENR_ADE_ADD23_OUT
+#define SET_DREAR_EAC_VALUE  DREAR_EAC_EXADDR24
+
+/* In the case of bit width 1-1-1 and addr width 24bit				*/
+#define SET_DRCMR_CMD_VALUE  DRCMR_CMD_FAST_READ_3B
+#define SET_DRENR_ADB_VALUE  DRENR_ADB_1BIT
+#define SET_DRENR_DRDB_VALUE DRENR_DRDB_1BIT
+#define SET_DRDMCR_VALUE     SPI_MULTI_DUMMY_8CYCLE
+#define SET_DRENR_SET_VALUE (DRENR_CDB_1BIT | DRENR_OCDB_1BIT | SET_DRENR_ADB_VALUE |	\
+				DRENR_OPDB_1BIT | SET_DRENR_DRDB_VALUE | DRENR_CDE | DRENR_DME | 			\
+				SET_DRENR_ADE_VALUE)
+
+/* In the case of bit width 1-1-4 and addr width 24bit 				*/
+/* #define SET_DRCMR_CMD_VALUE  DRCMR_CMD_QUAD_OUTPUT_FAST_READ_3B	*/
+/* #define SET_DRENR_ADB_VALUE  DRENR_ADB_1BIT						*/
+/* #define SET_DRENR_DRDB_VALUE DRENR_DRDB_4BIT						*/
+/* #define SET_DRDMCR_VALUE     SPI_MULTI_DUMMY_8CYCLE				*/
+/* #define SET_DRENR_SET_VALUE (DRENR_CDB_1BIT | DRENR_OCDB_1BIT | SET_DRENR_ADB_VALUE |	\	*/
+/*				DRENR_OPDB_1BIT | SET_DRENR_DRDB_VALUE | DRENR_CDE | DRENR_DME | 			\	*/
+/*				SET_DRENR_ADE_VALUE)								*/
+
+/* In the case of bit width 1-4-4 and addr width 24bi				*/
+/*#define SET_DRCMR_CMD_VALUE  DRCMR_CMD_QUAD_INPUT_OUTPUT_FAST_READ_3B
+#define SET_DRENR_ADB_VALUE  DRENR_ADB_4BIT
+#define SET_DRENR_DRDB_VALUE DRENR_DRDB_4BIT
+#define SET_DRDMCR_VALUE     SPI_MULTI_DUMMY_4CYCLE
+#define SET_DRENR_SET_VALUE (DRENR_CDB_1BIT | DRENR_OCDB_1BIT | SET_DRENR_ADB_VALUE |	\
+				DRENR_OPDB_1BIT | SET_DRENR_DRDB_VALUE | DRENR_CDE | DRENR_DME | 		\
+				SET_DRENR_ADE_VALUE |   DRENR_OPDB_4BIT | DRENR_OPDE_OPD3_OUT) */
+
+/* SDR mode serial flash settings */
+#define SPIM_PHYCNT_SET_VALUE (PHYCNT_DEF_DATA | PHYCNT_PHYMEM_SDR_MODE |	\
+				PHYCNT_WBUF_NOT_USED | PHYCNT_WBUF2_NOT_USED |				\
+				PHYCNT_CKSEL_SLOW | PHYCNT_HS_OTHER_MODE |					\
+				PHYCNT_OCT_OTHER_MODE | PHYCNT_EXDS_NOT_USED |				\
+				PHYCNT_OCTA_HYPER_FLASH | PHYCNT_ALT_ALIGN_NOT_SUPPORTED |	\
+				PHYCNT_CAL_NOT_PERFOMED)
+#define SPIM_PHYCNT_SDR_TIM_ADJ_SET_VALUE (SPIM_PHYCNT_SET_VALUE | PHYCNT_CKSEL_FAST)
+/* Read timing setting */
+#define SPIM_PHYOFFSET1_SET_VALUE (PHYOFFSET1_DEF_DATA | PHYOFFSET1_DDRTMG_SPIDRE_0)
+#define SPIM_PHYOFFSET2_SET_VALUE (PHYOFFSET2_DEF_DATA)
+
+/* Set the QSPIn_SSL setting value */
+#define SPIM_CMNCR_EXTREAD_SET_VALUE (CMNCR_IO0FV_OUT_PREV | CMNCR_IO2FV_OUT_PREV |	\
+					CMNCR_IO3FV_OUT_PREV | CMNCR_MOIIO0_OUT1 |						\
+					CMNCR_MOIIO1_OUT1    | CMNCR_MOIIO2_OUT1 |						\
+					CMNCR_MOIIO3_OUT1    | CMNCR_DEF_DATA |							\
+					CMNCR_MD_EXT_READ)
+
+#define SPIM_CMNCR_MANUAL_SET_VALUE (CMNCR_IO0FV_OUT_PREV | CMNCR_IO2FV_OUT_PREV |	\
+					CMNCR_IO3FV_OUT_PREV | CMNCR_MOIIO0_OUT1 |						\
+					CMNCR_MOIIO1_OUT1    | CMNCR_MOIIO2_OUT1 |						\
+					CMNCR_MOIIO3_OUT1    | CMNCR_DEF_DATA |							\
+					CMNCR_MD_MANUAL)
+
+/* Set SSL delay setting value */
+#define SPIM_SSLDR_SET_VALUE (SSLDR_SCKDL_4_5 | SSLDR_SLNDL_4QSPIn | SSLDR_SPNDL_4QSPIn)
+
+/* Set the RBE bit and RCF bit and RBURST */
+#define SPIM_DRCR_SET_VALUE (DRCR_RBE | DRCR_RCF | DRCR_RBURST_32_DATALEN)
+
+/* Set the data read command */
+#define SPIM_DRCMR_SET_VALUE (SET_DRCMR_CMD_VALUE)
+
+/* Extended external address setting */
+#define SPIM_DREAR_SET_VALUE (SET_DREAR_EAC_VALUE)
+
+/* Set the bit width of command and address output to 1 bit and	*/
+/* the address size to 4 byte									*/
+#define SPIM_DRENR_SET_VALUE (SET_DRENR_SET_VALUE)
+/* Dummy cycle setting */
+#define SPIM_DRDMCR_SET_VALUE (SET_DRDMCR_VALUE)
+
+/* Change to SPI flash mode */
+#define SPIM_DRDRENR_SET_VALUE (DRDRENR_DRDRE_SDR | DRDRENR_OPDRE_SDR | \
+				DRDRENR_ADDRE_SDR | DRDRENR_HYPE_SPI)
+/* Set the SDR transfer & SPI flash mode */
+#define SPIM_SMDRENR_SET_VALUE (SMDRENR_HYPE_SPI_FLASH)
+
+/* Set the option data */
+#define SPIM_DROPR_SET_VALUE	(0)
+
+/* Manual Command */
+#define SMCMR_CMD_WRITE_ENABLE             (0x06)
+#define SMCMR_CMD_WRITE_STATUS_REGISTER_2  (0x31)
+#define SMCMR_CMD_READ_STATUS_REGISTER_1   (0x05)
+#define SMCMR_CMD_READ_STATUS_REGISTER_2   (0x35)
+#define SMCMR_CMD_BIT_SHIFT                (16)
+#define SMWDR0_1BYTE_DATA_BIT_SHIFT        (24)
+
+/* Manual Command  Configure Length */
+#define SPI_MANUAL_COMMAND_SIZE_0      SMENR_SPIDE_NO_SEND
+#define SPI_MANUAL_COMMAND_SIZE_8_BIT  SMENR_SPIDE_8BIT_SEND
+#define SPI_MANUAL_COMMAND_SIZE_16_BIT SMENR_SPIDE_16BIT_SEND
+#define SPI_MANUAL_COMMAND_SIZE_32_BIT SMENR_SPIDE_32BIT_SEND
+/* Read Status Register-1(05h) */
+#define STATUS_1_BUSY_BIT	(1<<0)
+#define STATUS_1_WEL_BIT	(1<<1)
+#define STATUS_1_BUSY		(1<<0)
+#define STATUS_1_WEL		(1<<1)
+/* Read Status Register-1(BUSY flag) read delay time(micro sec)	*/
+#define STATUS_BUSY_READ_DELAY_TIME	(100)
+/* Read Status Register-2(35h)	*/
+/* Write Status Register-2(31h) */
+#define STATUS_2_QE			(1<<1)
+
+#endif /* _SPI_MULTI_REG_VALUES_H_ */
-- 
2.25.1

